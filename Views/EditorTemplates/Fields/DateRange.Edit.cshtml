@model MultiDates.ViewModels.DateRangeFieldViewModel
@{
    Style.Require("jQueryCalendars_Picker");
    Style.Require("jQueryUI_Calendars_Picker");
    Style.Require("jQueryDateTimeEditor");

    Script.Require("jQueryCalendars_All").AtFoot();
    Script.Require("jQueryCalendars_Picker_Ext").AtFoot();
}
<fieldset>
    <label for="@Html.FieldIdFor(m => Model.Dates)" @if (Model.IsRequired) { <text> class="required" </text>  }>@Model.Name</label>


    <label class="forpicker" for="@Html.FieldIdFor(m => Model.Dates)">@T("Dates")</label>
    <span class="date">@Html.TextBoxFor(m => m.Dates, new { placeholder = T("Dates").Text, @class = "text medium" })</span>

    <text>@Html.ValidationMessageFor(m => m.Dates)</text>

    @using (Script.Foot())
    {

        @* Generate the localization scripts. *@
        @Display.CalendarsPickerLocalization()

        <script type="text/javascript">
        //<![CDATA[
        $(function () {

                $("#@Html.FieldIdFor(m => Model.Dates)").calendarsPicker({
                    rangeSelect: true,
                    showAnim: "",
                    renderer: $.extend({}, $.calendarsPicker.themeRollerRenderer, {
                        picker: "<div {popup:start} id='ui-datepicker-div'{popup:end} class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all{inline:start} ui-datepicker-inline{inline:end}'><div class='ui-datepicker-header ui-widget-header ui-helper-clearfix ui-corner-all'>{link:prev}{link:today}{link:next}</div>{months}{popup:start}{popup:end}<div class='ui-helper-clearfix'></div></div>",
                        month: "<div class='ui-datepicker-group'><div class='ui-datepicker-month ui-helper-clearfix'>{monthHeader:MM yyyy}</div><table class='ui-datepicker-calendar'><thead>{weekHeader}</thead><tbody>{weeks}</tbody></table></div>"
                    })
                });
        });
        //]]>
        </script>
    }

    @if (HasText(Model.Hint))
    {
        <span class="hint">@Model.Hint</span>
    }
</fieldset>
